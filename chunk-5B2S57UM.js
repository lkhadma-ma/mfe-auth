var S=Object.defineProperty;var p=Object.getOwnPropertySymbols;var y=Object.prototype.hasOwnProperty,A=Object.prototype.propertyIsEnumerable;var g=(s,e,t)=>e in s?S(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,d=(s,e)=>{for(var t in e||={})y.call(e,t)&&g(s,t,e[t]);if(p)for(var t of p(e))A.call(e,t)&&g(s,t,e[t]);return s};var c=(s,e,t)=>new Promise((r,i)=>{var o=n=>{try{u(t.next(n))}catch(l){i(l)}},a=n=>{try{u(t.throw(n))}catch(l){i(l)}},u=n=>n.done?r(n.value):Promise.resolve(n.value).then(o,a);u((t=t.apply(s,e)).next())});import{inject as I,signal as U,effect as v}from"@angular/core";import{Auth as k,signInWithPopup as N,GoogleAuthProvider as h,signInWithCredential as b,signOut as w,authState as O}from"@angular/fire/auth";import*as f from"@angular/core";var m=class s{auth=I(k);user$=O(this.auth);accounts=U(this.loadAccounts());activeUser=U(this.loadActiveUser());constructor(){v(()=>this.saveAccounts(this.accounts())),v(()=>this.saveActiveUser(this.activeUser()))}loginWithGoogle(){return c(this,null,function*(){let e=new h;e.addScope("https://www.googleapis.com/auth/drive.file"),e.setCustomParameters({prompt:"consent select_account",access_type:"offline"});let t=yield N(this.auth,e),r=t.user,i=h.credentialFromResult(t),o=i?JSON.stringify({idToken:i.idToken,accessToken:i.accessToken}):void 0,a={uid:r.uid,displayName:r.displayName,email:r.email,photoURL:r.photoURL,credential:o};return this.addAccount(a),this.activeUser.set(a),r})}addAccount(e){let t=this.accounts().findIndex(r=>r.uid===e.uid);t>=0?this.accounts.update(r=>{let i=[...r];return i[t]=d(d({},i[t]),e),i}):this.accounts.update(r=>[...r,e])}switchAccount(e){return c(this,null,function*(){let t=this.accounts().find(r=>r.uid===e);if(!t)return Promise.reject("User not found");try{if(t.credential){let r=JSON.parse(t.credential),i=h.credential(r.idToken,r.accessToken),o=yield b(this.auth,i);return this.activeUser.set(t),o.user}}catch{console.warn("Cached credential expired, falling back to popup")}return this.loginWithGoogle()})}logout(){return this.activeUser.set(null),w(this.auth)}currentUser(){return this.activeUser()}saveAccounts(e){localStorage.setItem("accounts",JSON.stringify(e))}saveActiveUser(e){localStorage.setItem("activeUser",e?JSON.stringify(e):"null")}loadAccounts(){try{return JSON.parse(localStorage.getItem("accounts")??"[]")}catch{return[]}}loadActiveUser(){try{return JSON.parse(localStorage.getItem("activeUser")??"null")}catch{return null}}authorizationHeader(){return c(this,null,function*(){let e=this.auth.currentUser;return e?`Bearer ${yield e.getIdToken(!0)}`:null})}static \u0275fac=function(t){return new(t||s)};static \u0275prov=f.\u0275\u0275defineInjectable({token:s,factory:s.\u0275fac,providedIn:"root"})};export{c as a,m as b};
