import{a as s,c as a}from"./chunk-2VMXMS7J.js";import{inject as l,signal as d,effect as h}from"@angular/core";import{Auth as m,signInWithPopup as f,GoogleAuthProvider as c,signInWithCredential as v,signOut as U,authState as y}from"@angular/fire/auth";import{Router as k}from"@angular/router";import*as p from"@angular/core";var g=class n{auth=l(m);router=l(k);GSI_CLIENT_ID="21675652332-t3tnud7hssn9qsmpka13evv46001nvn7.apps.googleusercontent.com";user$=y(this.auth);accounts=d(this.loadAccounts());activeUser=d(this.loadActiveUser());constructor(){h(()=>this.saveAccounts(this.accounts())),h(()=>this.saveActiveUser(this.activeUser())),this.checkGoogleDriveLinkStatus()}loginWithGoogle(){return a(this,null,function*(){let e=new c;e.setCustomParameters({prompt:"consent select_account",access_type:"offline"});let r=yield f(this.auth,e),t=r.user,i=c.credentialFromResult(r),o=i?JSON.stringify({idToken:i.idToken,accessToken:i.accessToken}):void 0,u={uid:t.uid,displayName:t.displayName,email:t.email,photoURL:t.photoURL,credential:o};return this.addAccount(u),this.activeUser.set(u),t})}addAccount(e){let r=this.accounts().findIndex(t=>t.uid===e.uid);r>=0?this.accounts.update(t=>{let i=[...t];return i[r]=s(s({},i[r]),e),i}):this.accounts.update(t=>[...t,e])}switchAccount(e){return a(this,null,function*(){let r=this.accounts().find(t=>t.uid===e);if(!r)return Promise.reject("User not found");try{if(r.credential){let t=JSON.parse(r.credential),i=c.credential(t.idToken,t.accessToken),o=yield v(this.auth,i);return this.activeUser.set(r),o.user}}catch{console.warn("Cached credential expired, falling back to popup")}return this.loginWithGoogle()})}logout(){return this.activeUser.set(null),U(this.auth)}currentUser(){return this.activeUser()}saveAccounts(e){localStorage.setItem("accounts",JSON.stringify(e))}saveActiveUser(e){localStorage.setItem("activeUser",e?JSON.stringify(e):"null")}loadAccounts(){try{return JSON.parse(localStorage.getItem("accounts")??"[]")}catch{return[]}}loadActiveUser(){try{return JSON.parse(localStorage.getItem("activeUser")??"null")}catch{return null}}authorizationHeader(){return a(this,null,function*(){let e=this.auth.currentUser;return e?`Bearer ${yield e.getIdToken(!0)}`:null})}linkGoogleDrive(){return a(this,null,function*(){return new Promise((e,r)=>{try{google.accounts.oauth2.initCodeClient({client_id:this.GSI_CLIENT_ID,scope:"https://www.googleapis.com/auth/drive.file",ux_mode:"popup",callback:i=>a(this,null,function*(){return e(yield this.exchangingCode(i))}),error_callback:()=>{e(!1)}}).requestCode()}catch{e(!1);return}})})}exchangingCode(e){return a(this,null,function*(){let{code:r}=e,t=yield this.authorizationHeader();if(!t)return!1;try{return!!(yield fetch("http://localhost:8081/mbe-mutli-media/api/google/exchange-code",{method:"POST",headers:{"Content-Type":"application/json",Authorization:t},body:JSON.stringify({authorizationCode:r})})).ok}catch{return!1}})}isGoogleDriveLinked(){return a(this,null,function*(){let e=yield this.authorizationHeader();if(!e)return!1;try{return!!(yield fetch("http://localhost:8081/mbe-mutli-media/api/google/check",{method:"GET",headers:{Authorization:e}})).ok}catch{return!1}})}checkGoogleDriveLinkStatus(){return a(this,null,function*(){if(yield this.AuthorizationHeaderWaiter(),!this.auth.currentUser){this.router.navigate(["/auth/login"]);return}this.isGoogleDriveLinked().then(r=>{if(!r){this.router.navigate(["/auth/drive"]);return}})})}AuthorizationHeaderWaiter(){return a(this,null,function*(){var e=200,r=10;let t=0,i;do{if(i=yield this.authorizationHeader(),i)break;if(t++,t>=r)throw new Error("Auth header not ready after max retries");yield new Promise(o=>setTimeout(o,e))}while(!i)})}static \u0275fac=function(r){return new(r||n)};static \u0275prov=p.\u0275\u0275defineInjectable({token:n,factory:n.\u0275fac,providedIn:"root"})};export{g as a};
