var S=Object.defineProperty;var p=Object.getOwnPropertySymbols;var y=Object.prototype.hasOwnProperty,A=Object.prototype.propertyIsEnumerable;var U=(s,t,e)=>t in s?S(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,u=(s,t)=>{for(var e in t||={})y.call(t,e)&&U(s,e,t[e]);if(p)for(var e of p(t))A.call(t,e)&&U(s,e,t[e]);return s};var d=(s,t,e)=>new Promise((r,i)=>{var o=n=>{try{a(e.next(n))}catch(l){i(l)}},c=n=>{try{a(e.throw(n))}catch(l){i(l)}},a=n=>n.done?r(n.value):Promise.resolve(n.value).then(o,c);a((e=e.apply(s,t)).next())});import{inject as I,signal as g,effect as v}from"@angular/core";import{Auth as N,signInWithPopup as b,GoogleAuthProvider as h,signInWithCredential as O,signOut as k,authState as w}from"@angular/fire/auth";import*as f from"@angular/core";var m=class s{auth=I(N);user$=w(this.auth);accounts=g(this.loadAccounts());activeUser=g(this.loadActiveUser());constructor(){v(()=>this.saveAccounts(this.accounts())),v(()=>this.saveActiveUser(this.activeUser()))}loginWithGoogle(){return d(this,null,function*(){let t=new h;t.setCustomParameters({prompt:"select_account"});let e=yield b(this.auth,t),r=e.user,i=h.credentialFromResult(e),o=i?JSON.stringify({idToken:i.idToken,accessToken:i.accessToken}):void 0,c={uid:r.uid,displayName:r.displayName,email:r.email,photoURL:r.photoURL,credential:o};return this.addAccount(c),this.activeUser.set(c),r})}addAccount(t){let e=this.accounts().findIndex(r=>r.uid===t.uid);e>=0?this.accounts.update(r=>{let i=[...r];return i[e]=u(u({},i[e]),t),i}):this.accounts.update(r=>[...r,t])}switchAccount(t){return d(this,null,function*(){let e=this.accounts().find(r=>r.uid===t);if(!e)return Promise.reject("User not found");try{if(e.credential){let r=JSON.parse(e.credential),i=h.credential(r.idToken,r.accessToken),o=yield O(this.auth,i);return this.activeUser.set(e),o.user}}catch{console.warn("Cached credential expired, falling back to popup")}return this.loginWithGoogle()})}logout(){return this.activeUser.set(null),k(this.auth)}currentUser(){return this.activeUser()}saveAccounts(t){localStorage.setItem("accounts",JSON.stringify(t))}saveActiveUser(t){localStorage.setItem("activeUser",t?JSON.stringify(t):"null")}loadAccounts(){try{return JSON.parse(localStorage.getItem("accounts")??"[]")}catch{return[]}}loadActiveUser(){try{return JSON.parse(localStorage.getItem("activeUser")??"null")}catch{return null}}static \u0275fac=function(e){return new(e||s)};static \u0275prov=f.\u0275\u0275defineInjectable({token:s,factory:s.\u0275fac,providedIn:"root"})};export{d as a,m as b};
