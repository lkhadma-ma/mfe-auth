var S=Object.defineProperty;var g=Object.getOwnPropertySymbols;var y=Object.prototype.hasOwnProperty,A=Object.prototype.propertyIsEnumerable;var p=(s,t,e)=>t in s?S(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,l=(s,t)=>{for(var e in t||={})y.call(t,e)&&p(s,e,t[e]);if(g)for(var e of g(t))A.call(t,e)&&p(s,e,t[e]);return s};var d=(s,t,e)=>new Promise((r,i)=>{var o=n=>{try{c(e.next(n))}catch(u){i(u)}},a=n=>{try{c(e.throw(n))}catch(u){i(u)}},c=n=>n.done?r(n.value):Promise.resolve(n.value).then(o,a);c((e=e.apply(s,t)).next())});import{inject as I,signal as v,effect as U}from"@angular/core";import{Auth as N,signInWithPopup as O,GoogleAuthProvider as h,signInWithCredential as b,signOut as k,authState as J}from"@angular/fire/auth";import*as f from"@angular/core";var m=class s{auth=I(N);user$=J(this.auth);accounts=v(this.loadAccounts());activeUser=v(this.loadActiveUser());constructor(){U(()=>this.saveAccounts(this.accounts())),U(()=>this.saveActiveUser(this.activeUser()))}loginWithGoogle(){return d(this,null,function*(){let t=new h;t.setCustomParameters({prompt:"select_account"});let e=yield O(this.auth,t),r=e.user,i=h.credentialFromResult(e),o=i?JSON.stringify({idToken:i.idToken,accessToken:i.accessToken}):void 0,a={uid:r.uid,displayName:r.displayName,email:r.email,photoURL:r.photoURL,credential:o};return this.addAccount(a),this.activeUser.set(a),r})}addAccount(t){let e=this.accounts().findIndex(r=>r.uid===t.uid);e>=0?this.accounts.update(r=>{let i=[...r];return i[e]=l(l({},i[e]),t),i}):this.accounts.update(r=>[...r,t])}switchAccount(t){return d(this,null,function*(){let e=this.accounts().find(r=>r.uid===t);if(e)if(e.credential){let r=JSON.parse(e.credential),i=h.credential(r.idToken,r.accessToken),o=yield b(this.auth,i);return this.activeUser.set(e),o.user}else return this.loginWithGoogle()})}logout(){return this.activeUser.set(null),k(this.auth)}currentUser(){return this.activeUser()}saveAccounts(t){localStorage.setItem("accounts",JSON.stringify(t))}saveActiveUser(t){localStorage.setItem("activeUser",t?JSON.stringify(t):"null")}loadAccounts(){try{return JSON.parse(localStorage.getItem("accounts")??"[]")}catch{return[]}}loadActiveUser(){try{return JSON.parse(localStorage.getItem("activeUser")??"null")}catch{return null}}static \u0275fac=function(e){return new(e||s)};static \u0275prov=f.\u0275\u0275defineInjectable({token:s,factory:s.\u0275fac,providedIn:"root"})};export{d as a,m as b};
